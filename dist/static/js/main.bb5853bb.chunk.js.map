{"version":3,"sources":["scss/images/white.JPG","components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Nav.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetail.jsx","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","firebase","auth","then","type","props","className","to","onClick","SignedOutLinks","state","console","log","links","uid","ProjectSummary","project","title","content","ProjectList","projects","map","id","key","Dashboard","this","src","Profile","alt","Component","compose","firestoreConnect","collection","firestore","ordered","ownProps","match","params","data","authorFirstName","authorLastName","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","add","initials","createProject","authorId","createdAt","Date","CreateProject","placeholder","App","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","rrfProps","config","fbConfig","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb5853bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white.3167e5af.JPG\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <div className=\"loginMenu\">\r\n      <h3>\r\n        <NavLink to=\"/create\">New Posting</NavLink>\r\n      </h3>\r\n      <h3>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispathToprops = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispathToprops,\r\n)(SignedInLinks);\r\n","import firebase from 'firebase/app';\r\n\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  const firestore = firebase.firestore();\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection('users')\r\n          .add({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          })\r\n          .then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n          })\r\n          .catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div className=\"loginMenu\">\r\n      <h3>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </h3>\r\n      <h3>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Nav = props => {\r\n  const { auth } = props;\r\n  //console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n  return (\r\n    <nav>\r\n      <div className=\"navContainer\">\r\n        <Link to=\"/\" className=\"logo\">\r\n          <h2>Goplan</h2>\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Nav);\r\n","import React from 'react';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"project-summary\">\r\n      <div className=\"summary-container\">\r\n        <p className=\"summary-day\">3rd September, 2am</p>\r\n        <div className=\"summary-contens\">\r\n          <span className=\"summary-title\">{project.title}</span>\r\n          <p className=\"summary-content\">{project.content}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Profile from '../../scss/images/white.JPG';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth } = this.props;\r\n    // 로그인 하지 않으면 signin 페이지만 보여줌\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboardContainer\">\r\n        <div className=\"profile\">\r\n          <div className=\"image\">\r\n            <img src={Profile} alt=\"\" />\r\n          </div>\r\n          <div>\r\n            <h1>Goplan</h1>\r\n            <p>\r\n              Post the things <br />\r\n              you need to challenge!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"lists\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        {/* <Notifications /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'projects' }]),\r\n  connect(mapStateToProps),\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetail = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"project-details\">\r\n        <div className=\"detail-cotainer\">\r\n          <h2>2nd September, 2am</h2>\r\n\r\n          <h1 className=\"detail-title\">{project.title}</h1>\r\n          <p>{project.content}</p>\r\n          <h3>\r\n            Posted by -{' '}\r\n            <span>\r\n              {project.authorFirstName} {project.authorLastName}\r\n            </span>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loding project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects' }]),\r\n)(ProjectDetail);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"login-container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1>Sign In</h1>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button>Login</button>\r\n            <div className=\"error-text\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"user\">\r\n            <h3>- Use this -</h3>\r\n            <p>user1@google.co.kr</p>\r\n            <p>123456</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"signup-container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white z-depth-2\">\r\n          <h1 className=\"grey-text text-darken-3\">Sign Up</h1>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(SignUp);\r\n","import firebase from 'firebase/app';\r\n\r\nexport const createProject = project => {\r\n  return (dispatch, getState) => {\r\n    // async call to database\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstName: 'Dan',\r\n        authorLastName: 'Jooo',\r\n        authorId: 12345,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        // callback 위 작업이 실행되면 어떤 작업을 할 것인지\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createProject(this.state);\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"create-container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h1 className=\"grey-text text-darken-3\">Create New Project</h1>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"What challenges do you have?\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"textContent\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToprops = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToprops,\r\n)(CreateProject);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from './components/layout/Nav';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetail from './components/projects/ProjectDetail';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed',\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'learn redux', content: 'blah blah blah' },\r\n    { id: '2', title: 'exercise', content: 'blah blah blah blah' },\r\n    { id: '3', title: 'new project', content: 'blah blah blah' },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log(action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyCKu2RGp_tTiitKGIXGdULI61LQtW-i8RM',\r\n  authDomain: 'goplan-810d7.firebaseapp.com',\r\n  databaseURL: 'https://goplan-810d7.firebaseio.com',\r\n  projectId: 'goplan-810d7',\r\n  storageBucket: 'goplan-810d7.appspot.com',\r\n  messagingSenderId: '242973590192',\r\n  appId: '1:242973590192:web:5d5ab2ea086f210676b175',\r\n  measurementId: 'G-BEYQ3EHBD6',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/style.scss';\n\n// Redux\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\n// Firebase\nimport firebase from 'firebase/app';\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer,\n} from 'react-redux-firebase';\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore';\nimport fbConfig from './config/fbconfig';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}